{"ast":null,"code":"var _jsxFileName = \"/Users/thanhnguyen/Library/Mobile Documents/com~apple~CloudDocs/CSU/SJSU/CS160/Workspace/Recsys_new/frontend/src/components/MovieModule.js\";\nimport React, { Component } from 'react';\nimport { Rating, Card, Image } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport no_img from './no_image.png';\nimport { rate } from './UserFunctions';\nimport jwt_decode from 'jwt-decode';\nimport MovieDetails from './MovieDetails';\n\nclass MovieModule extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMovieDetails: false\n    };\n  }\n\n  toggleMovieDetails() {\n    this.setState({\n      showMovieDetails: !this.state.showMovieDetails\n    });\n  }\n\n  render() {\n    var img_src = \"\";\n\n    if (this.props.movie.poster === \"#N/A\") {\n      img_src = no_img;\n    } else {\n      img_src = \"http://image.tmdb.org/t/p/w300\" + this.props.movie.poster;\n    }\n\n    if (this.props.rated) {\n      return React.createElement(\"div\", {\n        className: \"dib pa3 zoom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: img_src,\n        wrapped: true,\n        ui: false,\n        onClick: this.toggleMovieDetails.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.props.movie.title)), React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Rating, {\n        rating: this.props.movie.rating,\n        size: \"massive\",\n        icon: \"star\",\n        maxRating: 5,\n        clearable: true,\n        onRate: async (_, data) => {\n          if (!localStorage.usertoken) {\n            window.alert(\"Your rating is not saved. You need to log in first.\");\n          } else {\n            const token = localStorage.usertoken;\n            const decoded = jwt_decode(token);\n            const user = decoded.identity.username;\n            const title = this.props.movie.title;\n            const rating = data.rating;\n            const movie = {\n              title,\n              rating,\n              user\n            };\n            rate(movie);\n          } // window.location.reload()\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }))), this.state.showMovieDetails ? React.createElement(MovieDetails, {\n        id: this.props.movie.id,\n        close: this.toggleMovieDetails.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }) : null);\n    } else {\n      return React.createElement(\"div\", {\n        className: \"dib pa3 grow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: img_src,\n        wrapped: true,\n        ui: false,\n        onClick: this.toggleMovieDetails.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.props.movie.title)), React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Rating, {\n        size: \"massive\",\n        icon: \"star\",\n        maxRating: 5,\n        clearable: true,\n        onRate: async (_, data) => {\n          if (!localStorage.usertoken) {\n            window.alert(\"Your rating is not saved. You need to log in first.\");\n          } else {\n            const token = localStorage.usertoken;\n            const decoded = jwt_decode(token);\n            const user = decoded.identity.username;\n            const title = this.props.movie.title;\n            const rating = data.rating;\n            const movie = {\n              title,\n              rating,\n              user\n            };\n            rate(movie);\n          } // window.location.reload()\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }))), this.state.showMovieDetails ? React.createElement(MovieDetails, {\n        id: this.props.movie.id,\n        close: this.toggleMovieDetails.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }) : null);\n    }\n  }\n\n} // PropTypes\n\n\nMovieModule.propTypes = {\n  movie: PropTypes.object.isRequired\n};\nexport default MovieModule;","map":{"version":3,"sources":["/Users/thanhnguyen/Library/Mobile Documents/com~apple~CloudDocs/CSU/SJSU/CS160/Workspace/Recsys_new/frontend/src/components/MovieModule.js"],"names":["React","Component","Rating","Card","Image","PropTypes","no_img","rate","jwt_decode","MovieDetails","MovieModule","constructor","props","state","showMovieDetails","toggleMovieDetails","setState","render","img_src","movie","poster","rated","bind","title","rating","_","data","localStorage","usertoken","window","alert","token","decoded","user","identity","username","id","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Rating, Card, Image } from 'semantic-ui-react'\nimport PropTypes from 'prop-types';\nimport no_img from './no_image.png'\nimport { rate } from './UserFunctions'\nimport jwt_decode from 'jwt-decode'\nimport MovieDetails from './MovieDetails'\n\nclass MovieModule extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { showMovieDetails: false};\n    }\n\n    toggleMovieDetails() {\n        this.setState({\n            showMovieDetails: !this.state.showMovieDetails\n        });\n    }\n    render() {\n\n        var img_src = \"\";\n        if (this.props.movie.poster === \"#N/A\") {\n            img_src = no_img;\n        } else {\n            img_src = \"http://image.tmdb.org/t/p/w300\" + this.props.movie.poster;\n        }\n\n        if (this.props.rated) {\n        return (\n            <div className='dib pa3 zoom'> \n                <Card>\n                    <Image src={img_src} wrapped ui={false}  onClick={this.toggleMovieDetails.bind(this)}/>\n                    <Card.Content>\n                        <Card.Header>{this.props.movie.title}</Card.Header>\n                    </Card.Content> \n                    <Card.Content>\n                        <Rating \n                        rating = {this.props.movie.rating}\n                        size='massive' \n                        icon='star' \n                        maxRating={5}\n                        clearable \n                        onRate={async (_, data) => {\n                            if (!localStorage.usertoken) {\n                                window.alert(\"Your rating is not saved. You need to log in first.\");\n                            }\n                            else {\n                                const token = localStorage.usertoken\n                                const decoded = jwt_decode(token)\n                                const user = decoded.identity.username;\n                                const title = this.props.movie.title;\n                                const rating = data.rating;\n                                const movie = { title, rating, user};\n                                rate(movie)\n                            }  \n                            // window.location.reload()\n                        }}\n                        \n                        />\n                    </Card.Content> \n                    \n                </Card>\n                {this.state.showMovieDetails ?\n                    <MovieDetails id={this.props.movie.id} close={this.toggleMovieDetails.bind(this)}/>\n                    : null\n                    }\n            </div>\n            \n            \n        ) \n        } else {\n            return (\n                <div className='dib pa3 grow'>\n                    <Card>\n                        <Image src={img_src} wrapped ui={false} onClick={this.toggleMovieDetails.bind(this)} />\n                        <Card.Content>\n                            <Card.Header>{this.props.movie.title}</Card.Header>\n                        </Card.Content>\n                        <Card.Content>\n                            <Rating\n                                size='massive'\n                                icon='star'\n                                maxRating={5}\n                                clearable\n                                onRate={async (_, data) => {\n                                    if (!localStorage.usertoken) {\n                                        window.alert(\"Your rating is not saved. You need to log in first.\");\n                                    }\n                                    else {\n                                        const token = localStorage.usertoken\n                                        const decoded = jwt_decode(token)\n                                        const user = decoded.identity.username;\n                                        const title = this.props.movie.title;\n                                        const rating = data.rating;\n                                        const movie = { title, rating, user };\n                                        rate(movie)\n                                    }\n                                    // window.location.reload()\n                                }}\n\n                            />\n                        </Card.Content>\n\n                    </Card>\n                    {this.state.showMovieDetails ?\n                        <MovieDetails id={this.props.movie.id} close={this.toggleMovieDetails.bind(this)} />\n                        : null\n                    }\n                </div>\n\n\n            )\n        }\n    }\n}\n\n\n// PropTypes\nMovieModule.propTypes = {\n    movie: PropTypes.object.isRequired\n}\n\nexport default MovieModule;"]},"metadata":{},"sourceType":"module"}