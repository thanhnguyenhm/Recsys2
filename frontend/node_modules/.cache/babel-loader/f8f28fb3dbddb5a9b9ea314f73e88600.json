{"ast":null,"code":"var _jsxFileName = \"/Users/thanhnguyen/Library/Mobile Documents/com~apple~CloudDocs/CSU/SJSU/CS160/Workspace/Recsys_new/frontend/src/components/Search.js\";\nimport React, { Component } from 'react';\nimport Movies from './Movies';\nimport { getMovies } from './MovieFunctions';\n\nclass Search extends Component {\n  constructor() {\n    super();\n\n    this.getInfo = () => {\n      const query = this.state.query;\n      getMovies(query);\n      /*fetch('/movies?query=${this.state.query}&limit=5', {method: 'GET'})\n      .then(response => response.json())\n      .then(data => this.setState({results: data}))*/\n    };\n\n    this.handleInputChange = () => {\n      this.setState({\n        query: this.search.value\n      }, () => {\n        if (this.state.query && this.state.query.length > 1) {\n          if (this.state.query.length % 2 === 0) {\n            this.getInfo();\n          }\n        } else if (!this.state.query) {}\n      });\n    };\n\n    this.state = {\n      query: '',\n      results: {}\n    };\n    this.getInfo = this.getInfo.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Search...\",\n      ref: input => this.search = input,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Movies, {\n      movies: this.state.results,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/thanhnguyen/Library/Mobile Documents/com~apple~CloudDocs/CSU/SJSU/CS160/Workspace/Recsys_new/frontend/src/components/Search.js"],"names":["React","Component","Movies","getMovies","Search","constructor","getInfo","query","state","handleInputChange","setState","search","value","length","results","bind","render","input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAC3BI,EAAAA,WAAW,GAAG;AACV;;AADU,SAWdC,OAXc,GAWJ,MAAM;AACZ,YAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAzB;AAEAJ,MAAAA,SAAS,CAACI,KAAD,CAAT;AACA;;;AAGH,KAlBa;;AAAA,SAoBdE,iBApBc,GAoBM,MAAM;AACtB,WAAKC,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAE,KAAKI,MAAL,CAAYC;AADT,OAAd,EAEG,MAAM;AACL,YAAI,KAAKJ,KAAL,CAAWD,KAAX,IAAoB,KAAKC,KAAL,CAAWD,KAAX,CAAiBM,MAAjB,GAA0B,CAAlD,EAAqD;AACjD,cAAI,KAAKL,KAAL,CAAWD,KAAX,CAAiBM,MAAjB,GAA0B,CAA1B,KAAgC,CAApC,EAAuC;AACnC,iBAAKP,OAAL;AACH;AACJ,SAJD,MAIO,IAAI,CAAC,KAAKE,KAAL,CAAWD,KAAhB,EAAuB,CAC7B;AACJ,OATD;AAUH,KA/Ba;;AAEV,SAAKC,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAE,EADE;AAETO,MAAAA,OAAO,EAAE;AAFA,KAAb;AAKA,SAAKR,OAAL,GAAe,KAAKA,OAAL,CAAaS,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKN,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBM,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AAwBDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,WAAW,EAAC,WADhB;AAEI,MAAA,GAAG,EAAEC,KAAK,IAAI,KAAKN,MAAL,GAAcM,KAFhC;AAGI,MAAA,QAAQ,EAAE,KAAKR,iBAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWM,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAUH;;AA7C0B;;AAgD/B,eAAeV,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport Movies from './Movies'\nimport { getMovies } from './MovieFunctions'\n\nclass Search extends Component {\n    constructor() {\n        super()\n        this.state = {\n            query: '',\n            results: {}\n        }\n\n        this.getInfo = this.getInfo.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n    }\n\n    getInfo = () => {\n        const query = this.state.query\n\n        getMovies(query)\n        /*fetch('/movies?query=${this.state.query}&limit=5', {method: 'GET'})\n        .then(response => response.json())\n        .then(data => this.setState({results: data}))*/\n    }\n\n    handleInputChange = () => {\n        this.setState({\n            query: this.search.value\n        }, () => {\n            if (this.state.query && this.state.query.length > 1) {\n                if (this.state.query.length % 2 === 0) {\n                    this.getInfo()\n                }\n            } else if (!this.state.query) {\n            }\n        })\n    }\n\n    render() {\n        return (\n            <form>\n                <input\n                    placeholder=\"Search...\"\n                    ref={input => this.search = input}\n                    onChange={this.handleInputChange}\n                />\n                <Movies movies={this.state.results} />\n            </form>\n        )\n    }\n}\n\nexport default Search; "]},"metadata":{},"sourceType":"module"}