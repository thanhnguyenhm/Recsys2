{"ast":null,"code":"var _jsxFileName = \"/Users/thanhnguyen/Library/Mobile Documents/com~apple~CloudDocs/CSU/SJSU/CS160/Workspace/Recsys_new/frontend/src/components/MovieModule.js\";\nimport React, { Component } from 'react';\nimport { Rating, Card, Image } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport no_img from './no_image.png';\nimport { rate } from './UserFunctions';\n\nclass MovieModule extends Component {\n  render() {\n    var img_src = \"\";\n\n    if (this.props.movie.poster === \"#N/A\") {\n      img_src = no_img;\n    } else {\n      img_src = \"http://image.tmdb.org/t/p/w300\" + this.props.movie.poster;\n    }\n\n    const userMode = React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Rating, {\n      rating: this.props.movie.rating,\n      size: \"massive\",\n      icon: \"star\",\n      maxRating: 5,\n      clearable: true,\n      onRate: async (_, data) => {\n        this.setState({\n          rating: data.rating\n        });\n        const title = this.props.movie.title;\n        const rating = data.rating;\n        const movie = {\n          title,\n          rating\n        };\n        rate(movie);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }));\n    const guessMode = React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Rating, {\n      rating: this.props.movie.rating,\n      size: \"massive\",\n      icon: \"star\",\n      maxRating: 5,\n      disabled: true,\n      onRate: async (_, data) => {\n        window.alert(\"You need to log in first\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"dib pa3 grow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: img_src,\n      wrapped: true,\n      ui: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.props.movie.title))));\n  }\n\n} // PropTypes\n\n\nMovieModule.propTypes = {\n  movie: PropTypes.object.isRequired\n};\nexport default MovieModule;","map":{"version":3,"sources":["/Users/thanhnguyen/Library/Mobile Documents/com~apple~CloudDocs/CSU/SJSU/CS160/Workspace/Recsys_new/frontend/src/components/MovieModule.js"],"names":["React","Component","Rating","Card","Image","PropTypes","no_img","rate","MovieModule","render","img_src","props","movie","poster","userMode","rating","_","data","setState","title","guessMode","window","alert","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,mBAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAChCQ,EAAAA,MAAM,GAAG;AAEL,QAAIC,OAAO,GAAG,EAAd;;AACA,QAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,KAA4B,MAAhC,EAAwC;AACpCH,MAAAA,OAAO,GAAGJ,MAAV;AACH,KAFD,MAEO;AACHI,MAAAA,OAAO,GAAG,mCAAmC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAA9D;AACH;;AAED,UAAMC,QAAQ,GACV,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,KAAX,CAAiBG,MAD7B;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,SAAS,EAAE,CAJf;AAKI,MAAA,SAAS,MALb;AAMI,MAAA,MAAM,EAAE,OAAOC,CAAP,EAAUC,IAAV,KAAmB;AACvB,aAAKC,QAAL,CAAc;AAAEH,UAAAA,MAAM,EAAEE,IAAI,CAACF;AAAf,SAAd;AACA,cAAMI,KAAK,GAAG,KAAKR,KAAL,CAAWC,KAAX,CAAiBO,KAA/B;AACA,cAAMJ,MAAM,GAAGE,IAAI,CAACF,MAApB;AACA,cAAMH,KAAK,GAAG;AAAEO,UAAAA,KAAF;AAASJ,UAAAA;AAAT,SAAd;AACAR,QAAAA,IAAI,CAACK,KAAD,CAAJ;AACH,OAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAmBA,UAAMQ,SAAS,GACX,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,MAAM,EAAE,KAAKT,KAAL,CAAWC,KAAX,CAAiBG,MAD7B;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,SAAS,EAAE,CAJf;AAKI,MAAA,QAAQ,MALZ;AAMI,MAAA,MAAM,EAAE,OAAOC,CAAP,EAAUC,IAAV,KAAmB;AACvBI,QAAAA,MAAM,CAACC,KAAP,CAAa,0BAAb;AACH,OARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAeA,WACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEZ,OAAZ;AAAqB,MAAA,OAAO,MAA5B;AAA6B,MAAA,EAAE,EAAE,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAc,KAAKC,KAAL,CAAWC,KAAX,CAAiBO,KAA/B,CADJ,CAFJ,CADJ,CADJ;AAgCH;;AA5E+B,C,CAgFpC;;;AACAX,WAAW,CAACe,SAAZ,GAAwB;AACpBX,EAAAA,KAAK,EAAEP,SAAS,CAACmB,MAAV,CAAiBC;AADJ,CAAxB;AAIA,eAAejB,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Rating, Card, Image } from 'semantic-ui-react'\nimport PropTypes from 'prop-types';\nimport no_img from './no_image.png'\nimport { rate } from './UserFunctions'\n\nclass MovieModule extends Component {\n    render() {\n\n        var img_src = \"\";\n        if (this.props.movie.poster === \"#N/A\") {\n            img_src = no_img;\n        } else {\n            img_src = \"http://image.tmdb.org/t/p/w300\" + this.props.movie.poster;\n        }\n\n        const userMode = (\n            <Card.Content>\n                <Rating\n                    rating={this.props.movie.rating}\n                    size='massive'\n                    icon='star'\n                    maxRating={5}\n                    clearable\n                    onRate={async (_, data) => {\n                        this.setState({ rating: data.rating });\n                        const title = this.props.movie.title;\n                        const rating = data.rating;\n                        const movie = { title, rating };\n                        rate(movie)\n                    }}\n                />\n            </Card.Content> \n        );\n\n        const guessMode = (\n            <Card.Content>\n                <Rating\n                    rating={this.props.movie.rating}\n                    size='massive'\n                    icon='star'\n                    maxRating={5}\n                    disabled\n                    onRate={async (_, data) => {\n                        window.alert(\"You need to log in first\");\n                    }}\n                />\n            </Card.Content> \n        );\n\n        return (\n            <div className='dib pa3 grow'>\n                <Card>\n                    <Image src={img_src} wrapped ui={false} />\n                    <Card.Content>\n                        <Card.Header>{this.props.movie.title}</Card.Header>\n                    </Card.Content> \n                    {/* <Card.Content>\n                        <Rating \n                        rating = {this.props.movie.rating}\n                        size='massive' \n                        icon='star' \n                        maxRating={5}\n                        clearable \n                        onRate={async (_, data) => {\n                            if (!localStorage.usertoken) {\n                                window.alert(\"You need to log in first\");\n                            }\n                            else {\n                                this.setState({ rating: data.rating });\n                                const title = this.props.movie.title;\n                                const rating = data.rating;\n                                const movie = { title, rating };\n                                rate(movie)\n                            }   \n                        }}\n                        />\n                    </Card.Content>  */}\n                    \n                </Card>\n            </div>\n        )\n    }\n}\n\n\n// PropTypes\nMovieModule.propTypes = {\n    movie: PropTypes.object.isRequired\n}\n\nexport default MovieModule;"]},"metadata":{},"sourceType":"module"}