{"ast":null,"code":"import axios from 'axios';\nimport { BACKEND_API } from '../config';\nexport const register = newUser => {\n  return axios.post(BACKEND_API + 'users/register', {\n    username: newUser.username,\n    email: newUser.email,\n    password: newUser.password\n  }).then(response => {\n    window.alert(\"You've successfully signed up. Please log in.\");\n    localStorage.setItem('usertoken', response.data);\n    return response.data;\n  }).catch(err => {\n    window.alert(\"username or email is already existed.\");\n  });\n};\nexport const login = user => {\n  return axios.post(BACKEND_API + 'users/login', {\n    username: user.username,\n    password: user.password\n  }).then(response => {\n    localStorage.setItem('usertoken', response.data);\n    return response.data;\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const getProfile = user => {\n  return axios.get(BACKEND_API + 'users/profile', {//headers: { Authorization: ` ${this.getToken()}` }\n  }).then(response => {\n    console.log(response);\n    return response.data;\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const rate = rate => {\n  return axios.post(BACKEND_API + 'add_rating', {\n    title: rate.title,\n    rating: rate.rating,\n    user: rate.user\n  }).then(response => {\n    console.log('Rated');\n  });\n};","map":{"version":3,"sources":["/Users/thanhnguyen/Library/Mobile Documents/com~apple~CloudDocs/CSU/SJSU/CS160/Workspace/Recsys_new/frontend/src/components/UserFunctions.js"],"names":["axios","BACKEND_API","register","newUser","post","username","email","password","then","response","window","alert","localStorage","setItem","data","catch","err","login","user","console","log","getProfile","get","rate","title","rating"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,OAAO,MAAMC,QAAQ,GAAGC,OAAO,IAAI;AAC/B,SAAOH,KAAK,CACPI,IADE,CACGH,WAAW,GAAG,gBADjB,EACmC;AAClCI,IAAAA,QAAQ,EAAEF,OAAO,CAACE,QADgB;AAElCC,IAAAA,KAAK,EAAEH,OAAO,CAACG,KAFmB;AAGlCC,IAAAA,QAAQ,EAAEJ,OAAO,CAACI;AAHgB,GADnC,EAMFC,IANE,CAMGC,QAAQ,IAAI;AACdC,IAAAA,MAAM,CAACC,KAAP,CAAa,+CAAb;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCJ,QAAQ,CAACK,IAA3C;AACA,WAAOL,QAAQ,CAACK,IAAhB;AACH,GAVE,EAWFC,KAXE,CAWIC,GAAG,IAAI;AACVN,IAAAA,MAAM,CAACC,KAAP,CAAa,uCAAb;AAEH,GAdE,CAAP;AAeH,CAhBM;AAkBP,OAAO,MAAMM,KAAK,GAAGC,IAAI,IAAI;AACzB,SAAOlB,KAAK,CACPI,IADE,CACGH,WAAW,GAAG,aADjB,EACgC;AAC/BI,IAAAA,QAAQ,EAAEa,IAAI,CAACb,QADgB;AAE/BE,IAAAA,QAAQ,EAAEW,IAAI,CAACX;AAFgB,GADhC,EAKFC,IALE,CAKGC,QAAQ,IAAI;AACdG,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCJ,QAAQ,CAACK,IAA3C;AACA,WAAOL,QAAQ,CAACK,IAAhB;AACH,GARE,EASFC,KATE,CASIC,GAAG,IAAI;AACVG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACH,GAXE,CAAP;AAYH,CAbM;AAeP,OAAO,MAAMK,UAAU,GAAGH,IAAI,IAAI;AAC9B,SAAOlB,KAAK,CACPsB,GADE,CACErB,WAAW,GAAG,eADhB,EACiC,CAChC;AADgC,GADjC,EAIFO,IAJE,CAIGC,QAAQ,IAAI;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACA,WAAOA,QAAQ,CAACK,IAAhB;AACH,GAPE,EAQFC,KARE,CAQIC,GAAG,IAAI;AACVG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACH,GAVE,CAAP;AAWH,CAZM;AAcP,OAAO,MAAMO,IAAI,GAAGA,IAAI,IAAI;AACxB,SAAOvB,KAAK,CACPI,IADE,CACGH,WAAW,GAAG,YADjB,EAC+B;AAC9BuB,IAAAA,KAAK,EAAED,IAAI,CAACC,KADkB;AAE9BC,IAAAA,MAAM,EAAEF,IAAI,CAACE,MAFiB;AAG9BP,IAAAA,IAAI,EAAEK,IAAI,CAACL;AAHmB,GAD/B,EAMNV,IANM,CAMDC,QAAQ,IAAI;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,GARM,CAAP;AASH,CAVM","sourcesContent":["import axios from 'axios'\nimport { BACKEND_API } from '../config';\n\nexport const register = newUser => {\n    return axios\n        .post(BACKEND_API + 'users/register', {\n            username: newUser.username,\n            email: newUser.email,\n            password: newUser.password\n        })\n        .then(response => {\n            window.alert(\"You've successfully signed up. Please log in.\")\n            localStorage.setItem('usertoken', response.data)\n            return response.data\n        })\n        .catch(err => {\n            window.alert(\"username or email is already existed.\")\n\n        })\n}\n\nexport const login = user => {\n    return axios\n        .post(BACKEND_API + 'users/login', {\n            username: user.username,\n            password: user.password\n        })\n        .then(response => {\n            localStorage.setItem('usertoken', response.data)\n            return response.data\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\n\nexport const getProfile = user => {\n    return axios\n        .get(BACKEND_API + 'users/profile', {\n            //headers: { Authorization: ` ${this.getToken()}` }\n        })\n        .then(response => {\n            console.log(response)\n            return response.data\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\n\nexport const rate = rate => {\n    return axios\n        .post(BACKEND_API + 'add_rating', {\n            title: rate.title,\n            rating: rate.rating,\n            user: rate.user\n        })\n    .then(response => {\n        console.log('Rated')\n    })\n}"]},"metadata":{},"sourceType":"module"}